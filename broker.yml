---
- hosts: brokers
  user: root
  vars:
    # paths for executables we don't have ansible modules for
    firewall_cmd: /usr/bin/firewall-cmd
    setsebool: /usr/sbin/setsebool
    gem: /usr/bin/gem 

    # config vars
    named_forwarder_ip: 4.2.2.2
    mq_provider: activemq
    mq_server_user: mcollective
    mq_server_password: marionette
    mongo_auth_user: openshift
    mongo_db_name: openshift_broker_dev
    mongo_auth_password: mooo

  tasks:
    
    ### Step 0 - SELinux Enforcing 
    - name: SELinux Enforcing (Targeted)
      selinux: policy=targeted state=enforcing
    - name: Ensure Installed - policycoreutils
      yum: pkg=policycoreutils state=installed
    - name: SELinux - configure sebooleans
      command:  $setsebool -P httpd_unified=on 
                httpd_can_network_connect=on httpd_can_network_relay=on 
                httpd_run_stickshift=on named_write_master_zones=on 
                allow_ypbind=on
      

    ### FirewallD install/config
    - name: Ensure Install - firewalld
      yum: pkg=firewalld state=installed
    #FIXME - There are certain states in which this will lock us out of the 
    #        system. Should template out all the configs to clean this up.
    - name: Start and Enable firewalld daemon 
      service: name=firewalld state=started enabled=yes
    # We can assume this is already set as an active service
    - name: FirewallD - permanent add-serivce sshd
      command: $firewall_cmd --permanent --add-service=ssh
      

    ### Setup Origin repos
    - name: Enable OpenShift Origin Nightly yum repo
      template: src=templates/openshift-origin-nightly.repo.j2
              dest=/etc/yum.repos.d/openshift-origin-nightly.repo
    - name: Enable OpenShift Origin Supplemental yum repo
      template: src=templates/openshift-origin-supplemental.repo.j2
                dest=/etc/yum.repos.d/openshift-origin-supplemental.repo

    ### Prereqs
    # NTP - sync first, then enable service
    - name: Ensure Install - ntpdate 
      yum: pkg=ntpdate state=installed
    - name: Ensure Install - ntp 
      yum: pkg=ntp state=installed
    - name: Stop ntp daemon for ntpdate sync
      service: name=ntpd state=stopped
    - name: Synchronize Clock with ntpdate
      action: command /usr/sbin/ntpdate 0.fedora.pool.ntp.org
    - name: Start and Enable ntp daemon 
      service: name=ntpd state=started enabled=yes

    # Install and configure ActiveMQ
    - name: Install ActiveMQ
      yum: pkg=activemq state=latest
    - name: Configure ActiveMQ jetty.xml
      template: src=templates/activemq/jetty.xml.j2
                dest=/etc/activemq/jetty.xml
    - name: Configure ActiveMQ activemq.xml
      template: src=templates/activemq/activemq.xml.j2
                dest=/etc/activemq/activemq.xml
    - name: Configure ActiveMQ jetty-realm.properties
      template: src=templates/activemq/jetty-realm.properties.j2
                dest=/etc/activemq/jetty-realm.properties.xml
    - name: Configure ActiveMQ tmp-activemq.conf
      template: src=templates/activemq/tmp-activemq.conf.j2
                dest=/etc/tmpfiles.d/activemq.conf
    #FIXME - Can't seem to find good docs on what ports need 
    #        to be opened. Pinning this for later.
    #- name: FirewallD - permanent - add-port ActiveMQ
    #  command: $firewall_cmd --permanent --add-port=XXXX
    #- name: FirewallD - add-port ActiveMQ
    #  command: $firewall_cmd --add-port=XXXX

    # Install and configure BIND
    - name: Install bind
      yum: pkg=bind state=latest
    - name: Install bind-utils
      yum: pkg=bind-utils state=latest
    - name: Configure named dynamic_domain.db
      template: src=templates/named/dynamic-zone.db.j2
                dest=/var/named/dynamic/$ansible_domain.db
                backup=yes
    - name: Configure named forwarders.conf
      template: src=templates/named/forwarders.conf.j2
                dest=/var/named/forwarders.conf
                backup=yes
    - name: Configure named named.conf
      template: src=templates/named/named.conf.j2
                dest=/etc/named.conf
                backup=yes
    - name: FirewallD - permanent add-serivce named
      command: $firewall_cmd --permanent --add-service=dns
    - name: FirewallD - add-serivce named
      command: $firewall_cmd --add-service=dns

    # MongoDB Install and configure 
    #   This could be broken out into it's own playbook to allow for some
    #   fancy orchestration and replication set configuration but for now 
    #   we will keep this simple.
    - name: Install MongoDB
      yum: pkg=mongodb state=latest
    - name: Install MongoDB Server
      yum: pkg=mongodb-server state=latest
    - name: FirewallD - permanent add-port 27017/tcp
      command: $firewall_cmd --permanent --add-port=27017/tcp
    - name: FirewallD - add-port 27017/tcp
      command: $firewall_cmd --add-port=27017/tcp
    - name: MongoDB user/pw script template copy
      template: src=templates/mongodb/set_mongopw.sh.j2
                dest=/root/00-set_mongopw.sh
                owner=root group=root mode=0500
    - name: Run MongoDB user/pw script 
      action: raw /root/00-set_mongopw.sh
    - name: Clean up after MongoDB user/pw script
      file: path=/root/00-set_mongopw.sh state=absent


    ### Dev tools needed by some gem installs for native modules/extensions 
    - name: Install dev-tool deps for gem installs
      yum: pkg=$item state=latest
      with_items:
        - ruby-devel 
        - mysql-devel 
        - mongodb-devel 
        - gcc 
        - make
    
    ### Big honking broker package list
    - name: Install OpenShift Package List
      yum: pkg=$item state=latest
      with_items:
        - openshift-origin-broker
        - rubygem-openshift-origin-msg-broker-mcollective 
        - rubygem-openshift-origin-dns-nsupdate 
        - rubygem-openshift-origin-dns-bind 
        - rubygem-openshift-origin-dns-bind 
        - rubygem-openshift-origin-controller 
        - openshift-origin-broker-util 
        - rubygem-passenger 
        - openssh 
        - mod_passenger 
        - rubygem-rails
        - rubygem-railties
        - rubygem-actionpack
        - rubygem-activemodel
        - rubygem-activerecord
        - rubygem-activeresource
        - rubygem-arel
        - rubygem-bigdecimal
        - rubygem-bson
        - rubygem-bson_ext
        - rubygem-builder
        - rubygem-bundler
        - rubygem-cucumber
        - rubygem-diff-lcs
        - rubygem-dnsruby
        - rubygem-erubis
        - rubygem-gherkin
        - rubygem-hike
        - rubygem-i18n
        - rubygem-mail
        - rubygem-metaclass
        - rubygem-mime-types
        - rubygem-minitest
        - rubygem-mocha
        - rubygem-mongo
        - rubygem-multi_json
        - rubygem-netrc
        - rubygem-open4
        - rubygem-parseconfig
        - rubygem-rack
        - rubygem-rack-cache
        - rubygem-rack-ssl
        - rubygem-rack-test
        - rubygem-rake
        - rubygem-rdoc
        - rubygem-regin
        - rubygem-rest-client
        - rubygem-simplecov
        - rubygem-sprockets
        - rubygem-state_machine
        - rubygem-stomp
        - rubygem-systemu
        - rubygem-term-ansicolor
        - rubygem-thor
        - rubygem-tilt
        - rubygem-treetop
        - rubygem-tzinfo
        - rubygem-xml-simple
        - rubygem-webmock
        - rubygem-fakefs

    ### Install gems not packaged in Fedora (we should package these)
    - name: Install gems not in Fedora repos
      command: $gem install $item 
      with_items: 
        - mongoid 
        - origin 
        - mysql
