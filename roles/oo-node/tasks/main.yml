---
## main.yml - OpenShift Origin Node role for an OpenShift Origin deployment
#
# Ansible playbook to deploy OpenShift Origin using nightly builds
#
#

- name: Setup OpenShift Origin Nightly Supplemental Repo
  copy: src=jenkins.repo dest=/etc/yum.repos.d/jenkins.repo

- name: Hostname config
  template: src=hostname.j2 dest=/etc/hostname
            owner=root group=root mode=0644 backup=yes
- name: check for hostname in /etc/hosts
  shell: grep '${ansible_default_ipv4.address} ${broker_fqdn}' /etc/hosts
  ignore_errors: yes 
  register: e_checkhosts
- name: conditionally set /etc/hosts
  shell: printf "${ansible_default_ipv4.address} ${broker_fqdn}\n" >>
         /etc/hosts
  only_if: ${e_checkhosts.rc} != 0

- name: SELinux - configure sebooleans
  seboolean:  name=$item state=true persistent=yes
  with_items:
    - httpd_run_stickshift
    - polyinstantiation_enabled
    - httpd_can_network_connect
    - httpd_can_network_relay
    - httpd_read_user_content
    - httpd_enable_homedirs
    - httpd_execmem
  tags:
    - selinux

# FirewallD Configs
- name: Configure Persistent FirewallD for http console
  shell: firewall-cmd --permanent --add-service http
- name: Configure Persistent FirewallD for https console
  shell: firewall-cmd --permanent --add-service https
- name: Configure Persistent FirewallD for port 8000/tcp
  shell: firewall-cmd --permanent --add-port 8000/tcp
- name: Configure Persistent FirewallD for port 8443/tcp
  shell: firewall-cmd --permanent --add-port 8443/tcp
- name: Configure FirewallD for http console
  shell: firewall-cmd --add-service http
- name: Configure FirewallD for https console
  shell: firewall-cmd --add-service https
- name: Configure FirewallD for port 8000/tcp
  shell: firewall-cmd --add-port 8000/tcp
- name: Configure FirewallD for port 8443/tcp
  shell: firewall-cmd --add-port 8443/tcp
      

# sysctl changes needed by OpenShift Origin Node
- name: sysctl - kernel.sem 
  sysctl: name=kernel.sem state=present value="250  32000 32  4096"
          checks=both reload=yes
- name: sysctl - net.ipv4.ip_local_port_range
  sysctl: name=net.ipv4.ip_local_port_range state=present 
          value="15000 35530" checks=both reload=yes
- name: sysctl - net.netfilter.nf_conntrack_max
  sysctl: name=net.netfilter.nf_conntrack_max state=present 
          value="1048576" checks=both reload=yes

### Dev tools needed by some gem installs for native modules/extensions 
- name: Install dev-tool deps for gem installs
  yum: pkg=$item state=latest
  with_items:
    - ruby-devel 
    - audit
    - mysql-devel 
    - mongodb-devel 
    - gcc 
    - make

### Install pkgs for OpenShift Origin Node
- name: Install OpenShift Package List
  yum: pkg=$item state=latest
  with_items:
    - rubygem-openshift-origin-node
    - openshift-origin-node-util
    - pam_openshift
    - openshift-origin-node-proxy
    - openshift-origin-port-proxy
    - openshift-origin-msg-node-mcollective
    - openshift-origin-cartridge-abstract
    - openshift-origin-cartridge-10gen-mms-agent
    - openshift-origin-cartridge-cron
    - openshift-origin-cartridge-diy
    - openshift-origin-cartridge-haproxy
    - openshift-origin-cartridge-mongodb
    - openshift-origin-cartridge-mysql
    - openshift-origin-cartridge-nodejs
    - openshift-origin-cartridge-jenkins
    - openshift-origin-cartridge-jenkins-client
    - openshift-origin-cartridge-python
    - openshift-origin-cartridge-postgresql
    - openshift-origin-cartridge-ruby
    - openshift-origin-cartridge-php
    - openshift-origin-cartridge-perl
    - openshift-origin-cartridge-phpmyadmin
    - git
    - make
    - cronie
  async: 5400
  poll: 10

### Post pkginstall config
- name: node.conf
  template: src=node.conf.j2
            dest=/etc/openshift/node.conf
            owner=root group=root mode=0644
- name: openshift_origin_node_severname.conf
  template: src=openshift-origin-node_servername.conf.j2
            dest=/etc/httpd/conf.d/000001_openshift_origin_node_servername.conf
            owner=root group=root mode=0644
- name: mcollective server config
  template: src=mcollective-server.cfg.j2
            dest=/etc/mcollective/server.cfg
            owner=root group=root mode=0644
- name: mcollective client config
  template: src=mcollective-client.cfg.j2
            dest=/etc/mcollective/client.cfg
            owner=root group=root mode=0644
- name: Find root mount point of gear dir
  shell: df -P /var/lib/openshift | tail -1 | awk '{ print $6 }'
  register: gear_root_mount
- name: Verify origin-node-util installed for quota init
  yum: pkg=openshift-origin-node-util state=installed
- name: Initialize quota db
  shell: oo-init-quota creates=${gear_root_mount.stdout}/aquota.user
- name: openshift node pam sshd config
  template: src=pam.sshd-fedora.j2
            dest=/etc/pam.d/sshd
            owner=root group=root mode=0644
- name: openshift node pam runuser
  copy: src=pam.runuser-fedora
        dest=/etc/pam.d/runuser owner=root group=root mode=0644
- name: openshift node pam runuser-l
  copy: src=pam.runuser-l-fedora
        dest=/etc/pam.d/runuser-l owner=root group=root mode=0644
- name: openshift node pam su
  copy: src=pam.su-fedora
        dest=/etc/pam.d/su owner=root group=root mode=0644
- name: openshift node pam system-auth-ac
  copy: src=pam.system-auth-ac-fedora
        dest=/etc/pam.d/system-auth-ac owner=root group=root mode=0644
- name: openshift node pam-namespace sandbox.conf
  template: src=namespace-d-sandbox.conf.j2
        dest=/etc/security/namespace.d/sandbox.conf
        owner=root group=root mode=0644
- name: openshift node pam-namespace tmp.conf
  template: src=namespace-d-tmp.conf.j2
        dest=/etc/security/namespace.d/tmp.conf
        owner=root group=root mode=0644
- name: openshift node pam-namespace vartmp.conf
  template: src=namespace-d-vartmp.conf.j2
        dest=/etc/security/namespace.d/vartmp.conf
        owner=root group=root mode=0644
- name: openshift node sshd config
  copy: src=sshd_config dest=/etc/ssh/sshd_config
        owner=root group=root mode=0600
- name: broker and console route for node
  copy: src=node_routes.txt dest=/tmp/nodes.broker_routes.txt
        owner=root group=root mode=0644
- name: regen node routes
  script: scripts/node/regen_node_routes.sh
- name: Restore SELinux context $gear_root_dir
  command: $restorecon -Rv $gear_root_dir
- name: Restore SELinux context $gear_httpd_dir
  command: $restorecon -Rv $gear_httpd_dir


### Verify all services are up
- name: Verify libcgroup-tools are installed for cgconfig/cgred
  yum: pkg=libcgroup-tools state=installed
- name: start/enable cgconfig service
  service: name=cgconfig state=started enabled=yes
  when_string: $configure_cgroups == 'true'
- name: start/enable cgred service
  service: name=cgred state=started enabled=yes
  when_string: $configure_cgroups == 'true'
- name: Verify origin-node rubygem installed for openshift-cgroups
  yum: pkg=rubygem-openshift-origin-node state=installed
- name: start/enable openshift-cgroups service
  service: name=openshift-cgroups state=started enabled=yes
  when_string: $configure_cgroups == 'true'
  #FIXME - BZ#982808 https://bugzilla.redhat.com/show_bug.cgi?id=982808
  ignore_errors: yes 
- name: Verify origin-port-proxy installed
  yum: pkg=openshift-origin-port-proxy state=installed
- name: start/enable openshift-port-proxy service
  service: name=openshift-port-proxy state=started enabled=yes
  when_string: $configure_cgroups == 'true'
- name: start/enable crond
  service: name=crond state=started enabled=yes
- name: start/enable openshift-gears
  service: name=openshift-gears state=started enabled=yes
- name: start/enable openshift-node-web-proxy
  service: name=openshift-node-web-proxy state=started enabled=yes
- name: start/enable mcollective
  service: name=mcollective state=started enabled=yes

