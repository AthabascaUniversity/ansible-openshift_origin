---
### node.yml - OpenShift Origin Node Ansible Playbook of Plays
#
# Ansible playbook to deploy OpenShift Origin Node nightly builds
#
# This is the OpenShift Origin Node ansible playbook, it contains multiple 
# plays as can be found below. Each one can be run indendently of one another
# by utilizing the ansible tags feature, an example of running only the plays
# tagged with selinux and named is as follows:
#
#       $ ansible-playbook node.yml -t selinux,postinstallconf
#
#   This is for those who want to make modifications and only run the play
# correlated to that change. Also, without the added overhead of a fanned out 
# directory structure because at this time it's not quite a large enough
# playbook that it should be necessary to do so.
#
#
#

- name: SELinux Config
  hosts: nodes
  user: root
  vars_files:
    - varfiles/origin_vars.yml
  tasks:
    ### Step 0 - SELinux Enforcing 
    - name: SELinux Enforcing (Targeted)
      selinux: policy=targeted state=enforcing
    - name: Ensure Installed - policycoreutils
      yum: pkg=policycoreutils state=installed
    - name: Ensure Installed - policycoreutils-python
      yum: pkg=policycoreutils-python state=installed
    - name: SELinux - configure sebooleans
      seboolean:  name=$item state=true persistent=yes
      with_items:
        - httpd_run_stickshift
        - polyinstantiation_enabled
        - httpd_can_network_connect
        - httpd_can_network_relay
        - httpd_read_user_content
        - httpd_enable_homedirs
        - httpd_execmem
  tags:
    - selinux

- name: FirewallD Config
  hosts: nodes
  user: root
  vars_files:
    - varfiles/origin_vars.yml
  tasks:
    ### FirewallD install/config
    - name: Ensure Install - firewalld
      yum: pkg=firewalld state=installed
    - name: Node firewalld config
      copy: src=files/node/node_firewalld.xml
            dest=/etc/firewalld/zones/node.xml
            owner=root group=root mode=0644
    - name: Start and Enable firewalld daemon 
      service: name=firewalld state=started enabled=yes
  tags:
    - firewalld
      
- name: Repo Setup
  hosts: nodes
  user: root
  vars_files:
    - varfiles/origin_vars.yml
  tasks:
    ### Setup Origin repos
    - name: Enable OpenShift Origin Nightly yum repo
      template: src=templates/openshift-origin-nightly.repo.j2
              dest=/etc/yum.repos.d/openshift-origin-nightly.repo
    - name: Enable OpenShift Origin Supplemental yum repo
      template: src=templates/openshift-origin-supplemental.repo.j2
                dest=/etc/yum.repos.d/openshift-origin-supplemental.repo
    - name: Enable Jenkins yum repo
      copy: src=files/node/jenkins.repo dest=/etc/yum.repos.d/jenkins.repo
  tags:
    - reposetup

- name: NTP Config
  hosts: nodes
  user: root
  vars_files:
    - varfiles/origin_vars.yml
  tasks:
    # NTP - sync first, then enable service
    - name: Ensure Install - ntpdate 
      yum: pkg=ntpdate state=installed
    - name: Ensure Install - ntp 
      yum: pkg=ntp state=installed
    - name: Stop ntp daemon for ntpdate sync
      service: name=ntpd state=stopped
    - name: Synchronize Clock with ntpdate
      action: command /usr/sbin/ntpdate 0.fedora.pool.ntp.org
    - name: Start and Enable ntp daemon 
      service: name=ntpd state=started enabled=yes
  tags:
    - ntp

- name: OpenShift Origin Node pkgs Install
  hosts: nodes
  user: root
  tasks:
    - name: Install OpenShift Package List
      yum: pkg=$item state=latest
      with_items:
        - rubygem-openshift-origin-node
        - openshift-origin-node-util
        - pam_openshift
        - openshift-origin-node-proxy
        - openshift-origin-port-proxy
        - openshift-origin-msg-node-mcollective
        - openshift-origin-cartridge-abstract
        - openshift-origin-cartridge-10gen-mms-agent-0.1
        - openshift-origin-cartridge-cron-1.4
        - openshift-origin-cartridge-diy-0.1
        - openshift-origin-cartridge-haproxy-1.4
        - openshift-origin-cartridge-mongodb-2.2
        - openshift-origin-cartridge-mysql-5.1
        - openshift-origin-cartridge-nodejs-0.6
        - openshift-origin-cartridge-jenkins-1.4
        - openshift-origin-cartridge-jenkins-client-1.4
        - openshift-origin-cartridge-community-python-2.7
        - openshift-origin-cartridge-community-python-3.3
        - openshift-origin-cartridge-postgresql-9.2
        - openshift-origin-cartridge-ruby-1.9
        - openshift-origin-cartridge-php-5.4
        - openshift-origin-cartridge-perl-5.16
        - openshift-origin-cartridge-phpmyadmin-3.5
        - git
        - make
        - cronie
        - httpd
  tags:
    - nodepkgs

- name: Post-Install Configure of OpenShift Origin Node
  hosts: nodes
  user: root
  vars_files:
    - varfiles/origin_vars.yml
  tasks:
    - name: node.conf
      template: src=templates/node/node.conf.j2
                dest=/etc/openshift/node.conf
                owner=root group=root mode=0644
    - name: openshift_origin_node_severname.conf
      template: src=templates/node/openshift-origin-node_servername.conf.j2
                dest=/etc/httpd/conf.d/000001_openshift_origin_node_servername.conf
                owner=root group=root mode=0644
    - name: mcollective server config
      template: src=templates/mcollective-server.cfg.j2
                dest=/etc/mcollective/server.cfg
                owner=root group=root mode=0644
    - name: mcollective client config
      template: src=templates/mcollective-client.cfg.j2
                dest=/etc/mcollective/client.cfg
                owner=root group=root mode=0644
    - name: Find root mount point of gear dir
      shell: /bin/df -P /var/lib/openshift | tail -1 | awk '{ print $6 }'
      register: gear_root_mount
    - name: Initialize quota db
      command: /usr/sbin/oo-init-quota creates=${gear_root_mount.stdout}/aquota.user
    - name: openshift node pam sshd config
      template: src=templates/node/pam.sshd-fedora.j2
                dest=/etc/pam.d/sshd
                owner=root group=root mode=0644
    - name: openshift node pam runuser
      copy: src=files/node/pam.runuser-fedora
            dest=/etc/pam.d/runuser owner=root group=root mode=0644
    - name: openshift node pam runuser-l
      copy: src=files/node/pam.runuser-l-fedora
            dest=/etc/pam.d/runuser-l owner=root group=root mode=0644
    - name: openshift node pam su
      copy: src=files/node/pam.su-fedora
            dest=/etc/pam.d/su owner=root group=root mode=0644
    - name: openshift node pam system-auth-ac
      copy: src=files/node/pam.system-auth-ac-fedora
            dest=/etc/pam.d/system-auth-ac owner=root group=root mode=0644
    - name: openshift node pam-namespace sandbox.conf
      template: src=templates/node/namespace-d-sandbox.conf.j2
            dest=/etc/security/namespace.d/sandbox.conf 
            owner=root group=root mode=0644
    - name: openshift node pam-namespace tmp.conf
      template: src=templates/node/namespace-d-tmp.conf.j2
            dest=/etc/security/namespace.d/tmp.conf 
            owner=root group=root mode=0644
    - name: openshift node pam-namespace vartmp.conf
      template: src=templates/node/namespace-d-vartmp.conf.j2
            dest=/etc/security/namespace.d/vartmp.conf 
            owner=root group=root mode=0644
    - name: openshift sysctl tweaks
      script: scripts/node/node_sysctl.sh
    - name: openshift node sshd config
      copy: src=files/node/sshd_config dest=/etc/ssh/sshd_config
            owner=root group=root mode=0600
    - name: broker and console route for node
      copy: src=files/node/node_routes.txt
            dest=/tmp/nodes.broker_routes.txt
            owner=root group=root mode=0644
    - name: regen node routes
      script: scripts/node/regen_node_routes.sh 
    - name: start/enable cgconfig service
      service: name=cgconfig state=started enabled=yes
      when_string: $configure_cgroups == 'true'
    - name: start/enable cgred service
      service: name=cgred state=started enabled=yes
      when_string: $configure_cgroups == 'true'
    - name: start/enable openshift-cgroups service
      service: name=openshift-cgroups state=started enabled=yes
      when_string: $configure_cgroups == 'true'
    - name: start/enable openshift-port-proxy service
      service: name=openshift-port-proxy state=started enabled=yes
      when_string: $configure_cgroups == 'true'
    - name: start/enable crond
      service: name=crond state=started enabled=yes
    - name: start/enable openshift-gears
      service: name=openshift-gears state=started enabled=yes
    - name: start/enable openshift-node-web-proxy
      service: name=openshift-node-web-proxy state=started enabled=yes
    - name: start/enable mcollective
      service: name=mcollective state=started enabled=yes
    - name: Restore SELinux context $gear_root_dir
      command: $restorecon -Rv $gear_root_dir
    - name: Restore SELinux context $gear_httpd_dir
      command: $restorecon -Rv $gear_httpd_dir

  tags:
    - postinstallconf
